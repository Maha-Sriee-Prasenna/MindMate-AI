{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Calmspace\\\\re\\\\src\\\\components\\\\FindOut.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport dog1 from './images/dog1.png';\nimport dog2 from './images/dog2.png';\nimport fish1 from './images/fish1.png';\nimport fish2 from './images/fish2.png';\nimport leaf1 from './images/leaf1.png';\nimport leaf2 from './images/leaf2.png';\nimport cat1 from './images/cat1.png';\nimport cat2 from './images/cat2.png';\nimport teddy1 from './images/teddy1.png';\nimport teddy2 from './images/teddy2.png';\nimport car1 from './images/car1.png';\nimport car2 from './images/car2.png';\nimport bicycle1 from './images/bicycle1.png';\nimport bicycle2 from './images/bicycle2.png';\nimport butterfly1 from './images/butterfly1.png';\nimport butterfly2 from './images/butterfly2.png';\nimport trees1 from './images/trees1.png';\nimport trees2 from './images/trees2.png';\nimport lion1 from './images/lion1.png';\nimport lion2 from './images/lion2.png';\nimport styles from './FindOut.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst imageSets = {\n  dogs: {\n    common: dog1,\n    odd: dog2,\n    name: \"Dogs\"\n  },\n  fish: {\n    common: fish1,\n    odd: fish2,\n    name: \"Fish\"\n  },\n  leaves: {\n    common: leaf1,\n    odd: leaf2,\n    name: \"Leaves\"\n  },\n  cats: {\n    common: cat1,\n    odd: cat2,\n    name: \"Cats\"\n  },\n  teddies: {\n    common: teddy1,\n    odd: teddy2,\n    name: \"Teddies\"\n  },\n  cars: {\n    common: car1,\n    odd: car2,\n    name: \"Cars\"\n  },\n  bicycles: {\n    common: bicycle1,\n    odd: bicycle2,\n    name: \"Bicycles\"\n  },\n  butterflies: {\n    common: butterfly1,\n    odd: butterfly2,\n    name: \"Butterflies\"\n  },\n  trees: {\n    common: trees1,\n    odd: trees2,\n    name: \"Trees\"\n  },\n  lions: {\n    common: lion1,\n    odd: lion2,\n    name: \"Lions\"\n  }\n};\nconst TOTAL_LEVELS = 10;\nconst TIMER_DURATION = 10;\nconst POINTS_PER_LEVEL = 10;\nfunction FindOut() {\n  _s();\n  var _imageSets$tiles$0$al, _tiles$, _tiles$$altText;\n  const [currentLevel, setCurrentLevel] = useState(0);\n  const [tiles, setTiles] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(TIMER_DURATION);\n  const [score, setScore] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [found, setFound] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const imageRefs = useRef([]);\n  const loadedCount = useRef(0);\n  const generateLevel = useCallback(levelIndex => {\n    const categories = Object.keys(imageSets);\n    const currentCategory = categories[levelIndex % categories.length];\n    const {\n      common,\n      odd\n    } = imageSets[currentCategory];\n    const gridSize = 8 * 8;\n    const oddPosition = Math.floor(Math.random() * gridSize);\n    return {\n      tiles: Array(gridSize).fill(0).map((_, index) => ({\n        id: index,\n        imgSrc: index === oddPosition ? odd : common,\n        isOdd: index === oddPosition,\n        altText: index === oddPosition ? `Odd ${currentCategory}` : `Common ${currentCategory}`\n      })),\n      category: currentCategory\n    };\n  }, []);\n  const handleImageLoad = useCallback(() => {\n    loadedCount.current += 1;\n    if (loadedCount.current === 8 * 8) {\n      setImagesLoaded(true);\n      loadedCount.current = 0;\n    }\n  }, []);\n  const nextLevel = useCallback(() => {\n    const newLevel = currentLevel + 1;\n    setCurrentLevel(newLevel);\n    setTimeLeft(TIMER_DURATION);\n    setFound(false);\n    setImagesLoaded(false);\n    const levelData = generateLevel(newLevel);\n    setTiles(levelData.tiles);\n  }, [currentLevel, generateLevel]);\n  const endGame = useCallback(() => {\n    setIsPlaying(false);\n    setGameOver(true);\n  }, []);\n  const startGame = useCallback(() => {\n    setCurrentLevel(0);\n    setTimeLeft(TIMER_DURATION);\n    setScore(0);\n    setIsPlaying(true);\n    setFound(false);\n    setGameOver(false);\n    setGameStarted(true);\n    setImagesLoaded(false);\n    loadedCount.current = 0;\n    const levelData = generateLevel(0);\n    setTiles(levelData.tiles);\n  }, [generateLevel]);\n  const handleClick = useCallback(isOdd => {\n    if (!isPlaying || found || gameOver || !imagesLoaded) return;\n    if (isOdd) {\n      setScore(s => s + POINTS_PER_LEVEL);\n      setFound(true);\n      setTimeout(() => {\n        if (currentLevel + 1 >= TOTAL_LEVELS) {\n          endGame();\n        } else {\n          nextLevel();\n        }\n      }, 1000);\n    }\n  }, [isPlaying, found, gameOver, imagesLoaded, currentLevel, endGame, nextLevel]);\n  useEffect(() => {\n    if (tiles.length > 0 && !imagesLoaded) {\n      if (imageRefs.current.filter(Boolean).length === 8 * 8) {\n        const allLoaded = imageRefs.current.every(ref => ref.complete);\n        if (allLoaded) setImagesLoaded(true);\n      }\n    }\n  }, [tiles, imagesLoaded]);\n  useEffect(() => {\n    let interval;\n    if (isPlaying && !found && timeLeft > 0 && imagesLoaded) {\n      interval = setInterval(() => {\n        setTimeLeft(t => t - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && !found && imagesLoaded) {\n      if (currentLevel + 1 >= TOTAL_LEVELS) {\n        endGame();\n      } else {\n        nextLevel();\n      }\n    }\n    return () => clearInterval(interval);\n  }, [isPlaying, timeLeft, found, currentLevel, nextLevel, endGame, imagesLoaded]);\n  if (!gameStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.App} ${styles['dark-theme']} ${styles['start-screen']}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Find Out \\uD83D\\uDC41\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['game-instructions'],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Find the different image in each 8\\xD78 grid!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u23F1\\uFE0F \", TIMER_DURATION, \" seconds per level\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83C\\uDFC6 \", POINTS_PER_LEVEL, \" points per correct answer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDD22 \", TOTAL_LEVELS, \" levels to complete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles['start-button'],\n        onClick: startGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.App} ${styles['dark-theme']}`,\n    children: gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['game-over'],\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Complete! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles['final-score'],\n        children: [\"Your score: \", score, \" out of \", TOTAL_LEVELS * POINTS_PER_LEVEL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles['control-btn'],\n        onClick: startGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!imagesLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['loading-indicator'],\n        children: [\"Loading images... \", loadedCount.current, \"/64\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['level-info'],\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Level: \", currentLevel + 1, \" of \", TOTAL_LEVELS]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Category: \", (_imageSets$tiles$0$al = imageSets[(_tiles$ = tiles[0]) === null || _tiles$ === void 0 ? void 0 : (_tiles$$altText = _tiles$.altText) === null || _tiles$$altText === void 0 ? void 0 : _tiles$$altText.replace(/Common |Odd /g, '')]) === null || _imageSets$tiles$0$al === void 0 ? void 0 : _imageSets$tiles$0$al.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['timer-container'],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['timer-bar'],\n          style: {\n            width: `${timeLeft / TIMER_DURATION * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles['timer-text'],\n          children: [timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['game-grid-8x8'],\n        style: {\n          opacity: imagesLoaded ? 1 : 0.5\n        },\n        children: tiles.map((tile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.tile} ${tile.isOdd ? styles['odd-tile'] : ''} ${found && tile.isOdd ? styles.found : ''}`,\n          onClick: () => handleClick(tile.isOdd),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            ref: el => imageRefs.current[index] = el,\n            src: tile.imgSrc,\n            alt: tile.altText,\n            className: styles['tile-image'],\n            onLoad: handleImageLoad,\n            onError: () => {\n              if (imageRefs.current[index]) {\n                imageRefs.current[index].style.display = 'none';\n              }\n              handleImageLoad();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)\n        }, tile.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['stats-panel'],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.stat,\n          children: [\"\\uD83D\\uDCAF Points: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.stat,\n          children: [\"\\uD83C\\uDFC6 Level: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [currentLevel + 1, \"/\", TOTAL_LEVELS]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(FindOut, \"iYJeNYYmVn8JcCMHDYjGAIgby2I=\");\n_c = FindOut;\nexport default FindOut;\nvar _c;\n$RefreshReg$(_c, \"FindOut\");","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","dog1","dog2","fish1","fish2","leaf1","leaf2","cat1","cat2","teddy1","teddy2","car1","car2","bicycle1","bicycle2","butterfly1","butterfly2","trees1","trees2","lion1","lion2","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","imageSets","dogs","common","odd","name","fish","leaves","cats","teddies","cars","bicycles","butterflies","trees","lions","TOTAL_LEVELS","TIMER_DURATION","POINTS_PER_LEVEL","FindOut","_s","_imageSets$tiles$0$al","_tiles$","_tiles$$altText","currentLevel","setCurrentLevel","tiles","setTiles","timeLeft","setTimeLeft","score","setScore","isPlaying","setIsPlaying","found","setFound","gameOver","setGameOver","gameStarted","setGameStarted","imagesLoaded","setImagesLoaded","imageRefs","loadedCount","generateLevel","levelIndex","categories","Object","keys","currentCategory","length","gridSize","oddPosition","Math","floor","random","Array","fill","map","_","index","id","imgSrc","isOdd","altText","category","handleImageLoad","current","nextLevel","newLevel","levelData","endGame","startGame","handleClick","s","setTimeout","filter","Boolean","allLoaded","every","ref","complete","interval","setInterval","t","clearInterval","className","App","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","replace","style","width","opacity","tile","el","src","alt","onLoad","onError","display","stat","_c","$RefreshReg$"],"sources":["D:/Projects/Calmspace/re/src/components/FindOut.js"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport dog1 from './images/dog1.png';\r\nimport dog2 from './images/dog2.png';\r\nimport fish1 from './images/fish1.png';\r\nimport fish2 from './images/fish2.png';\r\nimport leaf1 from './images/leaf1.png';\r\nimport leaf2 from './images/leaf2.png';\r\nimport cat1 from './images/cat1.png';\r\nimport cat2 from './images/cat2.png';\r\nimport teddy1 from './images/teddy1.png';\r\nimport teddy2 from './images/teddy2.png';\r\nimport car1 from './images/car1.png';\r\nimport car2 from './images/car2.png';\r\nimport bicycle1 from './images/bicycle1.png';\r\nimport bicycle2 from './images/bicycle2.png';\r\nimport butterfly1 from './images/butterfly1.png';\r\nimport butterfly2 from './images/butterfly2.png';\r\nimport trees1 from './images/trees1.png';\r\nimport trees2 from './images/trees2.png';\r\nimport lion1 from './images/lion1.png';\r\nimport lion2 from './images/lion2.png';\r\nimport styles from './FindOut.module.css';\r\n\r\nconst imageSets = {\r\n  dogs: { common: dog1, odd: dog2, name: \"Dogs\" },\r\n  fish: { common: fish1, odd: fish2, name: \"Fish\" },\r\n  leaves: { common: leaf1, odd: leaf2, name: \"Leaves\" },\r\n  cats: { common: cat1, odd: cat2, name: \"Cats\" },\r\n  teddies: { common: teddy1, odd: teddy2, name: \"Teddies\" },\r\n  cars: { common: car1, odd: car2, name: \"Cars\" },\r\n  bicycles: { common: bicycle1, odd: bicycle2, name: \"Bicycles\" },\r\n  butterflies: { common: butterfly1, odd: butterfly2, name: \"Butterflies\" },\r\n  trees: { common: trees1, odd: trees2, name: \"Trees\" },\r\n  lions: { common: lion1, odd: lion2, name: \"Lions\" }\r\n};\r\n\r\nconst TOTAL_LEVELS = 10;\r\nconst TIMER_DURATION = 10;\r\nconst POINTS_PER_LEVEL = 10;\r\n\r\nfunction FindOut() {\r\n  const [currentLevel, setCurrentLevel] = useState(0);\r\n  const [tiles, setTiles] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(TIMER_DURATION);\r\n  const [score, setScore] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [found, setFound] = useState(false);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [imagesLoaded, setImagesLoaded] = useState(false);\r\n  const imageRefs = useRef([]);\r\n  const loadedCount = useRef(0);\r\n\r\n  const generateLevel = useCallback((levelIndex) => {\r\n    const categories = Object.keys(imageSets);\r\n    const currentCategory = categories[levelIndex % categories.length];\r\n    const { common, odd } = imageSets[currentCategory];\r\n    const gridSize = 8 * 8;\r\n    const oddPosition = Math.floor(Math.random() * gridSize);\r\n    \r\n    return {\r\n      tiles: Array(gridSize).fill(0).map((_, index) => ({\r\n        id: index,\r\n        imgSrc: index === oddPosition ? odd : common,\r\n        isOdd: index === oddPosition,\r\n        altText: index === oddPosition ? `Odd ${currentCategory}` : `Common ${currentCategory}`\r\n      })),\r\n      category: currentCategory\r\n    };\r\n  }, []);\r\n\r\n  const handleImageLoad = useCallback(() => {\r\n    loadedCount.current += 1;\r\n    if (loadedCount.current === 8 * 8) {\r\n      setImagesLoaded(true);\r\n      loadedCount.current = 0;\r\n    }\r\n  }, []);\r\n\r\n  const nextLevel = useCallback(() => {\r\n    const newLevel = currentLevel + 1;\r\n    setCurrentLevel(newLevel);\r\n    setTimeLeft(TIMER_DURATION);\r\n    setFound(false);\r\n    setImagesLoaded(false);\r\n    const levelData = generateLevel(newLevel);\r\n    setTiles(levelData.tiles);\r\n  }, [currentLevel, generateLevel]);\r\n\r\n  const endGame = useCallback(() => {\r\n    setIsPlaying(false);\r\n    setGameOver(true);\r\n  }, []);\r\n\r\n  const startGame = useCallback(() => {\r\n    setCurrentLevel(0);\r\n    setTimeLeft(TIMER_DURATION);\r\n    setScore(0);\r\n    setIsPlaying(true);\r\n    setFound(false);\r\n    setGameOver(false);\r\n    setGameStarted(true);\r\n    setImagesLoaded(false);\r\n    loadedCount.current = 0;\r\n    const levelData = generateLevel(0);\r\n    setTiles(levelData.tiles);\r\n  }, [generateLevel]);\r\n\r\n  const handleClick = useCallback((isOdd) => {\r\n    if (!isPlaying || found || gameOver || !imagesLoaded) return;\r\n\r\n    if (isOdd) {\r\n      setScore(s => s + POINTS_PER_LEVEL);\r\n      setFound(true);\r\n      setTimeout(() => {\r\n        if (currentLevel + 1 >= TOTAL_LEVELS) {\r\n          endGame();\r\n        } else {\r\n          nextLevel();\r\n        }\r\n      }, 1000);\r\n    }\r\n  }, [isPlaying, found, gameOver, imagesLoaded, currentLevel, endGame, nextLevel]);\r\n\r\n  useEffect(() => {\r\n    if (tiles.length > 0 && !imagesLoaded) {\r\n      if (imageRefs.current.filter(Boolean).length === 8 * 8) {\r\n        const allLoaded = imageRefs.current.every(ref => ref.complete);\r\n        if (allLoaded) setImagesLoaded(true);\r\n      }\r\n    }\r\n  }, [tiles, imagesLoaded]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isPlaying && !found && timeLeft > 0 && imagesLoaded) {\r\n      interval = setInterval(() => {\r\n        setTimeLeft(t => t - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && !found && imagesLoaded) {\r\n      if (currentLevel + 1 >= TOTAL_LEVELS) {\r\n        endGame();\r\n      } else {\r\n        nextLevel();\r\n      }\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isPlaying, timeLeft, found, currentLevel, nextLevel, endGame, imagesLoaded]);\r\n\r\n  if (!gameStarted) {\r\n    return (\r\n      <div className={`${styles.App} ${styles['dark-theme']} ${styles['start-screen']}`}>\r\n        <h1>Find Out 👁️</h1>\r\n        <div className={styles['game-instructions']}>\r\n          <p>Find the different image in each 8×8 grid!</p>\r\n          <p>⏱️ {TIMER_DURATION} seconds per level</p>\r\n          <p>🏆 {POINTS_PER_LEVEL} points per correct answer</p>\r\n          <p>🔢 {TOTAL_LEVELS} levels to complete</p>\r\n        </div>\r\n        <button className={styles['start-button']} onClick={startGame}>\r\n          Start Game\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.App} ${styles['dark-theme']}`}>\r\n      {gameOver ? (\r\n        <div className={styles['game-over']}>\r\n          <h2>Game Complete! 🎉</h2>\r\n          <p className={styles['final-score']}>Your score: {score} out of {TOTAL_LEVELS * POINTS_PER_LEVEL}</p>\r\n          <button className={styles['control-btn']} onClick={startGame}>\r\n            Play Again\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {!imagesLoaded && (\r\n            <div className={styles['loading-indicator']}>\r\n              Loading images... {loadedCount.current}/64\r\n            </div>\r\n          )}\r\n\r\n          <div className={styles['level-info']}>\r\n            <span>Level: {currentLevel + 1} of {TOTAL_LEVELS}</span>\r\n            <span>Category: {imageSets[tiles[0]?.altText?.replace(/Common |Odd /g, '')]?.name}</span>\r\n          </div>\r\n\r\n          <div className={styles['timer-container']}>\r\n            <div \r\n              className={styles['timer-bar']} \r\n              style={{ width: `${(timeLeft / TIMER_DURATION) * 100}%` }}\r\n            ></div>\r\n            <span className={styles['timer-text']}>{timeLeft}s</span>\r\n          </div>\r\n          \r\n          <div className={styles['game-grid-8x8']} style={{ opacity: imagesLoaded ? 1 : 0.5 }}>\r\n            {tiles.map((tile, index) => (\r\n              <div\r\n                key={tile.id}\r\n                className={`${styles.tile} ${tile.isOdd ? styles['odd-tile'] : ''} ${found && tile.isOdd ? styles.found : ''}`}\r\n                onClick={() => handleClick(tile.isOdd)}\r\n              >\r\n                <img \r\n                  ref={el => imageRefs.current[index] = el}\r\n                  src={tile.imgSrc} \r\n                  alt={tile.altText}\r\n                  className={styles['tile-image']}\r\n                  onLoad={handleImageLoad}\r\n                  onError={() => {\r\n                    if (imageRefs.current[index]) {\r\n                      imageRefs.current[index].style.display = 'none';\r\n                    }\r\n                    handleImageLoad();\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className={styles['stats-panel']}>\r\n            <div className={styles.stat}>\r\n              💯 Points: <span>{score}</span>\r\n            </div>\r\n            <div className={styles.stat}>\r\n              🏆 Level: <span>{currentLevel + 1}/{TOTAL_LEVELS}</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FindOut;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}