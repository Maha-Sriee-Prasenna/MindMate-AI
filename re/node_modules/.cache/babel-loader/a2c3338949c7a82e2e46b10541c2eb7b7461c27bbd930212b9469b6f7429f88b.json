{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Calmspace\\\\re\\\\src\\\\components\\\\ColorHunter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './ColorHunter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ColorHunter() {\n  _s();\n  // Color palette with HSL values\n  const navigate = useNavigate();\n  const colorPalette = [{\n    name: 'Sapphire',\n    hsl: 'hsl(210, 100%, 40%)'\n  }, {\n    name: 'Ruby',\n    hsl: 'hsl(0, 90%, 45%)'\n  }, {\n    name: 'Amethyst',\n    hsl: 'hsl(280, 80%, 45%)'\n  }, {\n    name: 'Emerald',\n    hsl: 'hsl(120, 80%, 35%)'\n  }, {\n    name: 'Rose Quartz',\n    hsl: 'hsl(340, 70%, 65%)'\n  }, {\n    name: 'Turquoise',\n    hsl: 'hsl(180, 80%, 40%)'\n  }, {\n    name: 'Lavender',\n    hsl: 'hsl(260, 60%, 70%)'\n  }, {\n    name: 'Coral',\n    hsl: 'hsl(16, 100%, 65%)'\n  }, {\n    name: 'Jade',\n    hsl: 'hsl(160, 100%, 30%)'\n  }, {\n    name: 'Garnet',\n    hsl: 'hsl(350, 80%, 40%)'\n  }, {\n    name: 'Aquamarine',\n    hsl: 'hsl(170, 100%, 40%)'\n  }, {\n    name: 'Magenta',\n    hsl: 'hsl(320, 100%, 50%)'\n  }, {\n    name: 'Teal',\n    hsl: 'hsl(190, 100%, 35%)'\n  }];\n\n  // Game state\n  const [squares, setSquares] = useState([]);\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [gameOver, setGameOver] = useState(false);\n  const [currentColor, setCurrentColor] = useState(null);\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\n  const [lightnessDiff, setLightnessDiff] = useState(-10);\n  const timerRef = useRef(null);\n\n  // Update difficulty dynamically\n  useEffect(() => {\n    if (questionsAnswered < 10) {\n      setLightnessDiff(-10);\n    } else if (questionsAnswered < 20) {\n      setLightnessDiff(-5);\n    } else {\n      setLightnessDiff(-2);\n    }\n  }, [questionsAnswered]);\n\n  // Generate 3Ã—3 grid with one odd color\n  const generateGrid = () => {\n    const baseColor = colorPalette[Math.floor(Math.random() * colorPalette.length)];\n    setCurrentColor(baseColor);\n    const newSquares = Array(9).fill(baseColor);\n    const parts = baseColor.hsl.match(/hsl\\((\\d+),\\s*(\\d+)%,\\s*(\\d+)%\\)/);\n    const hue = parseInt(parts[1]);\n    const saturation = parseInt(parts[2]);\n    let lightness = parseInt(parts[3]);\n    lightness = Math.max(0, lightness + lightnessDiff);\n    const oddColor = {\n      ...baseColor,\n      hsl: `hsl(${hue}, ${saturation}%, ${lightness}%)`\n    };\n    const oddIndex = Math.floor(Math.random() * 9);\n    newSquares[oddIndex] = oddColor;\n    setSquares(newSquares);\n  };\n\n  // Handle color selection\n  const handleClick = color => {\n    if (color.hsl !== currentColor.hsl) {\n      setScore(score + 1);\n      setQuestionsAnswered(questionsAnswered + 1);\n      generateGrid();\n    }\n  };\n\n  // Timer effect - now using useRef to persist the timer\n  useEffect(() => {\n    // Clear existing timer if any\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n\n    // Start new timer\n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timerRef.current);\n          setGameOver(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    // Cleanup on unmount\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [gameOver]); // Added gameOver as dependency\n\n  // Initialize game\n  useEffect(() => {\n    generateGrid();\n  }, []);\n\n  // Reset game - now properly handles timer\n  const startNewGame = () => {\n    // Clear existing timer\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n\n    // Reset state\n    setScore(0);\n    setTimeLeft(60);\n    setGameOver(false);\n    setQuestionsAnswered(0);\n    setLightnessDiff(-10);\n    generateGrid();\n\n    // The useEffect will handle starting the new timer\n    // because gameOver state changed\n  };\n\n  // Format time display\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"COLOR HUNTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.timer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.timeDisplay,\n          children: formatTime(timeLeft)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.timeBar,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timeProgress,\n            style: {\n              width: `${timeLeft / 60 * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gamePanel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.stats,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statBox,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"SCORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statValue,\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statBox,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"DIFFICULTY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statValue,\n            children: [Math.abs(lightnessDiff), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), !gameOver && currentColor && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.targetDisplay,\n        children: [\"Find the color with \", Math.abs(lightnessDiff), \"% less lightness\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.colorGrid,\n        children: squares.map((color, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick(color),\n          style: {\n            backgroundColor: color.hsl\n          },\n          \"aria-label\": `Color ${color.name}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gameOver,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.resultBox,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TIME'S UP!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.finalScore,\n          children: [\"You scored \", score, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.playButton,\n          onClick: startNewGame,\n          children: \"PLAY AGAIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(ColorHunter, \"MFdPAfDAV62CdcsrO16dw6xD2R8=\", false, function () {\n  return [useNavigate];\n});\n_c = ColorHunter;\nexport default ColorHunter;\nvar _c;\n$RefreshReg$(_c, \"ColorHunter\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","styles","jsxDEV","_jsxDEV","ColorHunter","_s","navigate","colorPalette","name","hsl","squares","setSquares","score","setScore","timeLeft","setTimeLeft","gameOver","setGameOver","currentColor","setCurrentColor","questionsAnswered","setQuestionsAnswered","lightnessDiff","setLightnessDiff","timerRef","generateGrid","baseColor","Math","floor","random","length","newSquares","Array","fill","parts","match","hue","parseInt","saturation","lightness","max","oddColor","oddIndex","handleClick","color","current","clearInterval","setInterval","prev","startNewGame","formatTime","seconds","mins","secs","className","container","children","header","fileName","_jsxFileName","lineNumber","columnNumber","timer","timeDisplay","timeBar","timeProgress","style","width","gamePanel","stats","statBox","statValue","abs","targetDisplay","colorGrid","map","index","onClick","backgroundColor","resultBox","finalScore","playButton","_c","$RefreshReg$"],"sources":["D:/Projects/Calmspace/re/src/components/ColorHunter.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './ColorHunter.module.css';\r\n\r\nfunction ColorHunter() {\r\n  // Color palette with HSL values\r\n  const navigate = useNavigate();\r\n  const colorPalette = [\r\n    { name: 'Sapphire', hsl: 'hsl(210, 100%, 40%)' },\r\n    { name: 'Ruby', hsl: 'hsl(0, 90%, 45%)' },\r\n    { name: 'Amethyst', hsl: 'hsl(280, 80%, 45%)' },\r\n    { name: 'Emerald', hsl: 'hsl(120, 80%, 35%)' },\r\n    { name: 'Rose Quartz', hsl: 'hsl(340, 70%, 65%)' },\r\n    { name: 'Turquoise', hsl: 'hsl(180, 80%, 40%)' },\r\n    { name: 'Lavender', hsl: 'hsl(260, 60%, 70%)' },\r\n    { name: 'Coral', hsl: 'hsl(16, 100%, 65%)' },\r\n    { name: 'Jade', hsl: 'hsl(160, 100%, 30%)' },\r\n    { name: 'Garnet', hsl: 'hsl(350, 80%, 40%)' },\r\n    { name: 'Aquamarine', hsl: 'hsl(170, 100%, 40%)' },\r\n    { name: 'Magenta', hsl: 'hsl(320, 100%, 50%)' },\r\n    { name: 'Teal', hsl: 'hsl(190, 100%, 35%)' }\r\n  ];\r\n\r\n  // Game state\r\n  const [squares, setSquares] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(60);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [currentColor, setCurrentColor] = useState(null);\r\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\r\n  const [lightnessDiff, setLightnessDiff] = useState(-10);\r\n  const timerRef = useRef(null);\r\n\r\n  // Update difficulty dynamically\r\n  useEffect(() => {\r\n    if (questionsAnswered < 10) {\r\n      setLightnessDiff(-10);\r\n    } else if (questionsAnswered < 20) {\r\n      setLightnessDiff(-5);\r\n    } else {\r\n      setLightnessDiff(-2);\r\n    }\r\n  }, [questionsAnswered]);\r\n\r\n  // Generate 3Ã—3 grid with one odd color\r\n  const generateGrid = () => {\r\n    const baseColor = colorPalette[Math.floor(Math.random() * colorPalette.length)];\r\n    setCurrentColor(baseColor);\r\n    \r\n    const newSquares = Array(9).fill(baseColor);\r\n    const parts = baseColor.hsl.match(/hsl\\((\\d+),\\s*(\\d+)%,\\s*(\\d+)%\\)/);\r\n    const hue = parseInt(parts[1]);\r\n    const saturation = parseInt(parts[2]);\r\n    let lightness = parseInt(parts[3]);\r\n    \r\n    lightness = Math.max(0, lightness + lightnessDiff);\r\n    const oddColor = {\r\n      ...baseColor,\r\n      hsl: `hsl(${hue}, ${saturation}%, ${lightness}%)`\r\n    };\r\n    \r\n    const oddIndex = Math.floor(Math.random() * 9);\r\n    newSquares[oddIndex] = oddColor;\r\n    setSquares(newSquares);\r\n  };\r\n\r\n  // Handle color selection\r\n  const handleClick = (color) => {\r\n    if (color.hsl !== currentColor.hsl) {\r\n      setScore(score + 1);\r\n      setQuestionsAnswered(questionsAnswered + 1);\r\n      generateGrid();\r\n    }\r\n  };\r\n\r\n  // Timer effect - now using useRef to persist the timer\r\n  useEffect(() => {\r\n    // Clear existing timer if any\r\n    if (timerRef.current) {\r\n      clearInterval(timerRef.current);\r\n    }\r\n    \r\n    // Start new timer\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft(prev => {\r\n        if (prev <= 1) {\r\n          clearInterval(timerRef.current);\r\n          setGameOver(true);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n    };\r\n  }, [gameOver]); // Added gameOver as dependency\r\n\r\n  // Initialize game\r\n  useEffect(() => {\r\n    generateGrid();\r\n  }, []);\r\n\r\n  // Reset game - now properly handles timer\r\n  const startNewGame = () => {\r\n    // Clear existing timer\r\n    if (timerRef.current) {\r\n      clearInterval(timerRef.current);\r\n    }\r\n    \r\n    // Reset state\r\n    setScore(0);\r\n    setTimeLeft(60);\r\n    setGameOver(false);\r\n    setQuestionsAnswered(0);\r\n    setLightnessDiff(-10);\r\n    generateGrid();\r\n    \r\n    // The useEffect will handle starting the new timer\r\n    // because gameOver state changed\r\n  };\r\n\r\n  // Format time display\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        <h1>COLOR HUNTER</h1>\r\n        <div className={styles.timer}>\r\n          <div className={styles.timeDisplay}>{formatTime(timeLeft)}</div>\r\n          <div className={styles.timeBar}>\r\n            <div \r\n              className={styles.timeProgress} \r\n              style={{ width: `${(timeLeft / 60) * 100}%` }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.gamePanel}>\r\n        <div className={styles.stats}>\r\n          <div className={styles.statBox}>\r\n            <span>SCORE</span>\r\n            <span className={styles.statValue}>{score}</span>\r\n          </div>\r\n          <div className={styles.statBox}>\r\n            <span>DIFFICULTY</span>\r\n            <span className={styles.statValue}>{Math.abs(lightnessDiff)}%</span>\r\n          </div>\r\n        </div>\r\n\r\n        {!gameOver && currentColor && (\r\n          <div className={styles.targetDisplay}>\r\n            Find the color with {Math.abs(lightnessDiff)}% less lightness\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles.colorGrid}>\r\n          {squares.map((color, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleClick(color)}\r\n              style={{ backgroundColor: color.hsl }}\r\n              aria-label={`Color ${color.name}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {gameOver && (\r\n        <div className={styles.gameOver}>\r\n          <div className={styles.resultBox}>\r\n            <h2>TIME'S UP!</h2>\r\n            <p className={styles.finalScore}>You scored {score} points</p>\r\n            <button \r\n              className={styles.playButton}\r\n              onClick={startNewGame}\r\n            >\r\n              PLAY AGAIN\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorHunter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}